buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.3.1"
    }
}

apply plugin: 'java'
apply plugin: 'jacoco'

String getMyVersionName() {
    def stdout = new ByteArrayOutputStream()
    if (rootProject.file("gradlew").exists())
        exec { commandLine 'git', 'describe', '--tags', '--always', '--dirty'; standardOutput = stdout }
    else // automatic build system, don't tag dirty
        exec { commandLine 'git', 'describe', '--tags', '--always'; standardOutput = stdout }
    return stdout.toString().trim().substring(1)
}

group = "org.microg"
version = getMyVersionName();

repositories {
    jcenter()
}

dependencies {
    compile 'org.yaml:snakeyaml:1.17'
    testCompile 'junit:junit:4.12'
}

void createListing(String dirname) {
    File dir = project.file(dirname)
    File target = new File(dir, "index.list")
    dir.eachFile {
        if (!it.name.equals("index.list"))
            target.append(it.name + (it.isDirectory() ? "/\n" : "\n"))
    }
}

processResources.doLast {
    createListing("build/resources/main/org/microg/address/conf/countries")
}

processTestResources.doLast {
    createListing("build/resources/test/org/microg/address/testcases/countries")
}

jacocoTestReport {
    dependsOn test
    sourceDirectories = project.files(sourceSets.main.allSource.srcDirs)
    classDirectories = project.files(sourceSets.main.output)
    reports {
        xml.enabled true
    }
}

apply plugin: "com.github.kt3k.coveralls"
coveralls {
    sourceDirs = files(subprojects.sourceSets.main.allSource.srcDirs).files.absolutePath
}

sourceCompatibility = JavaVersion.VERSION_1_6

if (file('user.gradle').exists()) {
    apply from: 'user.gradle'
}

